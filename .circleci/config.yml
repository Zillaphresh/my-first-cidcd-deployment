# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
orbs:
  aws-cli: circleci/aws-cli@2.0.3
commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}

jobs:
  # create_infrastructure:
  #   docker:
  #     - image: amazon/aws-cli
  #   steps:
  #     - checkout
  #     - run:
  #         name: "Create cloud Formation stack"
  #         command: |
  #           aws cloudformation deploy \
  #               --template-file template.yml \
  #               --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
  #               --region us-east-1
  #     - destroy_environment

  configure_infractructure:
    docker:
      - image: python:3.7-alpine3.11
      - image: circleci/aws-cli@2.0.3
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: 
            - "7e:99:8e:04:32:7d:d4:20:cb:b7:85:93:67:4f:a4:7a"
      - run:
          name: install Ansible
          command: |
            apk add --update ansible
      - run:
          name: configure ansible playbook
          command: |
            ansible-playbook  -i inventory.ini playbook.yml 
      - destroy_environment
    
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: Smoke test
          command: |
            URL="https://blog.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi
      - destroy_environment



# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  my_workflow:
    jobs:
      - configure_infractructure
      - smoke_test
            

        
      
